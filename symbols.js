// symbol index generated by DDOX - do not edit
var symbols = [
{name: 'stdx.data.json.foundation', kind: "module", path: './stdx/data/json/foundation.html', attributes: []},
{name: 'stdx.data.json.foundation.JSONException', kind: "classdeclaration", path: './stdx/data/json/foundation/JSONException.html', attributes: []},
{name: 'stdx.data.json.foundation.JSONException.location', kind: "variabledeclaration", path: './stdx/data/json/foundation/JSONException.location.html', attributes: []},
{name: 'stdx.data.json.foundation.JSONException.message', kind: "variabledeclaration", path: './stdx/data/json/foundation/JSONException.message.html', attributes: []},
{name: 'stdx.data.json.foundation.JSONException.this', kind: "functiondeclaration", path: './stdx/data/json/foundation/JSONException.this.html', attributes: ["safe"]},
{name: 'stdx.data.json.foundation.Location', kind: "structdeclaration", path: './stdx/data/json/foundation/Location.html', attributes: []},
{name: 'stdx.data.json.foundation.Location.column', kind: "variabledeclaration", path: './stdx/data/json/foundation/Location.column.html', attributes: []},
{name: 'stdx.data.json.foundation.Location.file', kind: "variabledeclaration", path: './stdx/data/json/foundation/Location.file.html', attributes: []},
{name: 'stdx.data.json.foundation.Location.line', kind: "variabledeclaration", path: './stdx/data/json/foundation/Location.line.html', attributes: []},
{name: 'stdx.data.json.foundation.Location.toString', kind: "functiondeclaration", path: './stdx/data/json/foundation/Location.toString.html', attributes: ["safe", "const"]},
{name: 'stdx.data.json.generator', kind: "module", path: './stdx/data/json/generator.html', attributes: []},
{name: 'stdx.data.json.generator.GeneratorOptions', kind: "enumdeclaration", path: './stdx/data/json/generator/GeneratorOptions.html', attributes: []},
{name: 'stdx.data.json.generator.GeneratorOptions.compact', kind: "enummemberdeclaration", path: './stdx/data/json/generator/GeneratorOptions.html#compact', attributes: []},
{name: 'stdx.data.json.generator.GeneratorOptions.escapeUnicode', kind: "enummemberdeclaration", path: './stdx/data/json/generator/GeneratorOptions.html#escapeUnicode', attributes: []},
{name: 'stdx.data.json.generator.GeneratorOptions.init', kind: "enummemberdeclaration", path: './stdx/data/json/generator/GeneratorOptions.html#init', attributes: []},
{name: 'stdx.data.json.generator.GeneratorOptions.specialFloatLiterals', kind: "enummemberdeclaration", path: './stdx/data/json/generator/GeneratorOptions.html#specialFloatLiterals', attributes: []},
{name: 'stdx.data.json.generator.jsonOutputRange', kind: "functiondeclaration", path: './stdx/data/json/generator/jsonOutputRange.html', attributes: []},
{name: 'stdx.data.json.generator.JSONOutputRange', kind: "structdeclaration", path: './stdx/data/json/generator/JSONOutputRange.html', attributes: []},
{name: 'stdx.data.json.generator.JSONOutputRange.put', kind: "functiondeclaration", path: './stdx/data/json/generator/JSONOutputRange.put.html', attributes: []},
{name: 'stdx.data.json.generator.JSONOutputRange.this', kind: "functiondeclaration", path: './stdx/data/json/generator/JSONOutputRange.this.html', attributes: []},
{name: 'stdx.data.json.generator.toJSON', kind: "functiondeclaration", path: './stdx/data/json/generator/toJSON.html', attributes: []},
{name: 'stdx.data.json.generator.writeJSON', kind: "functiondeclaration", path: './stdx/data/json/generator/writeJSON.html', attributes: []},
{name: 'stdx.data.json.lexer', kind: "module", path: './stdx/data/json/lexer.html', attributes: []},
{name: 'stdx.data.json.lexer.JSONLexerRange', kind: "structdeclaration", path: './stdx/data/json/lexer/JSONLexerRange.html', attributes: []},
{name: 'stdx.data.json.lexer.JSONLexerRange.empty', kind: "functiondeclaration", path: './stdx/data/json/lexer/JSONLexerRange.empty.html', attributes: ["property"]},
{name: 'stdx.data.json.lexer.JSONLexerRange.front', kind: "functiondeclaration", path: './stdx/data/json/lexer/JSONLexerRange.front.html', attributes: ["property", "ref"]},
{name: 'stdx.data.json.lexer.JSONLexerRange.input', kind: "functiondeclaration", path: './stdx/data/json/lexer/JSONLexerRange.input.html', attributes: ["property"]},
{name: 'stdx.data.json.lexer.JSONLexerRange.location', kind: "functiondeclaration", path: './stdx/data/json/lexer/JSONLexerRange.location.html', attributes: ["const", "property"]},
{name: 'stdx.data.json.lexer.JSONLexerRange.popFront', kind: "functiondeclaration", path: './stdx/data/json/lexer/JSONLexerRange.popFront.html', attributes: []},
{name: 'stdx.data.json.lexer.JSONLexerRange.this', kind: "functiondeclaration", path: './stdx/data/json/lexer/JSONLexerRange.this.html', attributes: []},
{name: 'stdx.data.json.lexer.JSONNumber', kind: "structdeclaration", path: './stdx/data/json/lexer/JSONNumber.html', attributes: []},
{name: 'stdx.data.json.lexer.JSONNumber.bigIntValue', kind: "functiondeclaration", path: './stdx/data/json/lexer/JSONNumber.bigIntValue.html', attributes: ["nothrow", "property", "trusted", "const"]},
{name: 'stdx.data.json.lexer.JSONNumber.doubleValue', kind: "functiondeclaration", path: './stdx/data/json/lexer/JSONNumber.doubleValue.html', attributes: ["nothrow", "property", "nogc", "trusted", "const"]},
{name: 'stdx.data.json.lexer.JSONNumber.longValue', kind: "functiondeclaration", path: './stdx/data/json/lexer/JSONNumber.longValue.html', attributes: ["nothrow", "property", "nogc", "trusted", "const"]},
{name: 'stdx.data.json.lexer.JSONNumber.opAssign', kind: "functiondeclaration", path: './stdx/data/json/lexer/JSONNumber.opAssign.html', attributes: ["nothrow", "nogc", "trusted"]},
{name: 'stdx.data.json.lexer.JSONNumber.opCmp', kind: "functiondeclaration", path: './stdx/data/json/lexer/JSONNumber.opCmp.html', attributes: ["const", "nothrow", "nogc"]},
{name: 'stdx.data.json.lexer.JSONNumber.opEquals', kind: "functiondeclaration", path: './stdx/data/json/lexer/JSONNumber.opEquals.html', attributes: ["const", "nothrow", "nogc"]},
{name: 'stdx.data.json.lexer.JSONNumber.this', kind: "functiondeclaration", path: './stdx/data/json/lexer/JSONNumber.this.html', attributes: ["nothrow", "ref", "nogc", "safe"]},
{name: 'stdx.data.json.lexer.JSONNumber.toHash', kind: "functiondeclaration", path: './stdx/data/json/lexer/JSONNumber.toHash.html', attributes: ["nothrow", "trusted", "const"]},
{name: 'stdx.data.json.lexer.JSONNumber.type', kind: "functiondeclaration", path: './stdx/data/json/lexer/JSONNumber.type.html', attributes: ["nothrow", "property", "nogc", "safe", "const"]},
{name: 'stdx.data.json.lexer.JSONString', kind: "structdeclaration", path: './stdx/data/json/lexer/JSONString.html', attributes: []},
{name: 'stdx.data.json.lexer.JSONString.anyValue', kind: "functiondeclaration", path: './stdx/data/json/lexer/JSONString.anyValue.html', attributes: ["const", "pure", "nogc", "property"]},
{name: 'stdx.data.json.lexer.JSONString.opCmp', kind: "functiondeclaration", path: './stdx/data/json/lexer/JSONString.opCmp.html', attributes: ["nothrow", "trusted"]},
{name: 'stdx.data.json.lexer.JSONString.opEquals', kind: "functiondeclaration", path: './stdx/data/json/lexer/JSONString.opEquals.html', attributes: ["nothrow"]},
{name: 'stdx.data.json.lexer.JSONString.rawValue', kind: "functiondeclaration", path: './stdx/data/json/lexer/JSONString.rawValue.html', attributes: ["property"]},
{name: 'stdx.data.json.lexer.JSONString.this', kind: "functiondeclaration", path: './stdx/data/json/lexer/JSONString.this.html', attributes: ["pure", "nothrow", "nogc"]},
{name: 'stdx.data.json.lexer.JSONString.toHash', kind: "functiondeclaration", path: './stdx/data/json/lexer/JSONString.toHash.html', attributes: ["const", "nothrow", "trusted"]},
{name: 'stdx.data.json.lexer.JSONString.value', kind: "functiondeclaration", path: './stdx/data/json/lexer/JSONString.value.html', attributes: ["property"]},
{name: 'stdx.data.json.lexer.JSONToken', kind: "structdeclaration", path: './stdx/data/json/lexer/JSONToken.html', attributes: []},
{name: 'stdx.data.json.lexer.JSONToken.boolean', kind: "functiondeclaration", path: './stdx/data/json/lexer/JSONToken.boolean.html', attributes: ["const", "pure", "nothrow", "nogc", "property", "trusted"]},
{name: 'stdx.data.json.lexer.JSONToken.kind', kind: "functiondeclaration", path: './stdx/data/json/lexer/JSONToken.kind.html', attributes: ["const", "pure", "nothrow", "nogc", "property"]},
{name: 'stdx.data.json.lexer.JSONToken.location', kind: "variabledeclaration", path: './stdx/data/json/lexer/JSONToken.location.html', attributes: []},
{name: 'stdx.data.json.lexer.JSONToken.number', kind: "functiondeclaration", path: './stdx/data/json/lexer/JSONToken.number.html', attributes: ["const", "pure", "nothrow", "nogc", "property", "trusted"]},
{name: 'stdx.data.json.lexer.JSONToken.opEquals', kind: "functiondeclaration", path: './stdx/data/json/lexer/JSONToken.opEquals.html', attributes: ["const", "nothrow", "trusted"]},
{name: 'stdx.data.json.lexer.JSONToken.string', kind: "functiondeclaration", path: './stdx/data/json/lexer/JSONToken.string.html', attributes: ["const", "pure", "nothrow", "nogc", "property", "trusted"]},
{name: 'stdx.data.json.lexer.JSONToken.this', kind: "functiondeclaration", path: './stdx/data/json/lexer/JSONToken.this.html', attributes: []},
{name: 'stdx.data.json.lexer.JSONToken.toHash', kind: "functiondeclaration", path: './stdx/data/json/lexer/JSONToken.toHash.html', attributes: ["const", "nothrow", "trusted"]},
{name: 'stdx.data.json.lexer.JSONToken.toString', kind: "functiondeclaration", path: './stdx/data/json/lexer/JSONToken.toString.html', attributes: ["const", "trusted"]},
{name: 'stdx.data.json.lexer.JSONTokenKind', kind: "enumdeclaration", path: './stdx/data/json/lexer/JSONTokenKind.html', attributes: []},
{name: 'stdx.data.json.lexer.JSONTokenKind.arrayEnd', kind: "enummemberdeclaration", path: './stdx/data/json/lexer/JSONTokenKind.html#arrayEnd', attributes: []},
{name: 'stdx.data.json.lexer.JSONTokenKind.arrayStart', kind: "enummemberdeclaration", path: './stdx/data/json/lexer/JSONTokenKind.html#arrayStart', attributes: []},
{name: 'stdx.data.json.lexer.JSONTokenKind.boolean', kind: "enummemberdeclaration", path: './stdx/data/json/lexer/JSONTokenKind.html#boolean', attributes: []},
{name: 'stdx.data.json.lexer.JSONTokenKind.colon', kind: "enummemberdeclaration", path: './stdx/data/json/lexer/JSONTokenKind.html#colon', attributes: []},
{name: 'stdx.data.json.lexer.JSONTokenKind.comma', kind: "enummemberdeclaration", path: './stdx/data/json/lexer/JSONTokenKind.html#comma', attributes: []},
{name: 'stdx.data.json.lexer.JSONTokenKind.error', kind: "enummemberdeclaration", path: './stdx/data/json/lexer/JSONTokenKind.html#error', attributes: []},
{name: 'stdx.data.json.lexer.JSONTokenKind.none', kind: "enummemberdeclaration", path: './stdx/data/json/lexer/JSONTokenKind.html#none', attributes: []},
{name: 'stdx.data.json.lexer.JSONTokenKind.null_', kind: "enummemberdeclaration", path: './stdx/data/json/lexer/JSONTokenKind.html#null_', attributes: []},
{name: 'stdx.data.json.lexer.JSONTokenKind.number', kind: "enummemberdeclaration", path: './stdx/data/json/lexer/JSONTokenKind.html#number', attributes: []},
{name: 'stdx.data.json.lexer.JSONTokenKind.objectEnd', kind: "enummemberdeclaration", path: './stdx/data/json/lexer/JSONTokenKind.html#objectEnd', attributes: []},
{name: 'stdx.data.json.lexer.JSONTokenKind.objectStart', kind: "enummemberdeclaration", path: './stdx/data/json/lexer/JSONTokenKind.html#objectStart', attributes: []},
{name: 'stdx.data.json.lexer.JSONTokenKind.string', kind: "enummemberdeclaration", path: './stdx/data/json/lexer/JSONTokenKind.html#string', attributes: []},
{name: 'stdx.data.json.lexer.lexJSON', kind: "functiondeclaration", path: './stdx/data/json/lexer/lexJSON.html', attributes: []},
{name: 'stdx.data.json.lexer.LexOptions', kind: "enumdeclaration", path: './stdx/data/json/lexer/LexOptions.html', attributes: []},
{name: 'stdx.data.json.lexer.LexOptions.init', kind: "enummemberdeclaration", path: './stdx/data/json/lexer/LexOptions.html#init', attributes: []},
{name: 'stdx.data.json.lexer.LexOptions.noThrow', kind: "enummemberdeclaration", path: './stdx/data/json/lexer/LexOptions.html#noThrow', attributes: []},
{name: 'stdx.data.json.lexer.LexOptions.noTrackLocation', kind: "enummemberdeclaration", path: './stdx/data/json/lexer/LexOptions.html#noTrackLocation', attributes: []},
{name: 'stdx.data.json.lexer.LexOptions.specialFloatLiterals', kind: "enummemberdeclaration", path: './stdx/data/json/lexer/LexOptions.html#specialFloatLiterals', attributes: []},
{name: 'stdx.data.json.lexer.LexOptions.useBigInt', kind: "enummemberdeclaration", path: './stdx/data/json/lexer/LexOptions.html#useBigInt', attributes: []},
{name: 'stdx.data.json.lexer.LexOptions.useLong', kind: "enummemberdeclaration", path: './stdx/data/json/lexer/LexOptions.html#useLong', attributes: []},
{name: 'stdx.data.json.parser', kind: "module", path: './stdx/data/json/parser.html', attributes: []},
{name: 'stdx.data.json.parser.isJSONParserNodeInputRange', kind: "enummemberdeclaration", path: './stdx/data/json/parser/isJSONParserNodeInputRange.html', attributes: []},
{name: 'stdx.data.json.parser.isJSONTokenInputRange', kind: "enummemberdeclaration", path: './stdx/data/json/parser/isJSONTokenInputRange.html', attributes: []},
{name: 'stdx.data.json.parser.JSONParserNode', kind: "structdeclaration", path: './stdx/data/json/parser/JSONParserNode.html', attributes: []},
{name: 'stdx.data.json.parser.JSONParserNode.key', kind: "functiondeclaration", path: './stdx/data/json/parser/JSONParserNode.key.html', attributes: ["const", "nothrow", "property", "trusted"]},
{name: 'stdx.data.json.parser.JSONParserNode.kind', kind: "functiondeclaration", path: './stdx/data/json/parser/JSONParserNode.kind.html', attributes: ["const", "nothrow", "property"]},
{name: 'stdx.data.json.parser.JSONParserNode.literal', kind: "functiondeclaration", path: './stdx/data/json/parser/JSONParserNode.literal.html', attributes: ["inout", "nothrow", "property", "ref", "trusted"]},
{name: 'stdx.data.json.parser.JSONParserNode.opEquals', kind: "functiondeclaration", path: './stdx/data/json/parser/JSONParserNode.opEquals.html', attributes: ["const", "nothrow"]},
{name: 'stdx.data.json.parser.JSONParserNode.toHash', kind: "functiondeclaration", path: './stdx/data/json/parser/JSONParserNode.toHash.html', attributes: ["const", "nothrow", "trusted"]},
{name: 'stdx.data.json.parser.JSONParserNode.toString', kind: "functiondeclaration", path: './stdx/data/json/parser/JSONParserNode.toString.html', attributes: ["const"]},
{name: 'stdx.data.json.parser.JSONParserNodeKind', kind: "enumdeclaration", path: './stdx/data/json/parser/JSONParserNodeKind.html', attributes: []},
{name: 'stdx.data.json.parser.JSONParserNodeKind.arrayEnd', kind: "enummemberdeclaration", path: './stdx/data/json/parser/JSONParserNodeKind.html#arrayEnd', attributes: []},
{name: 'stdx.data.json.parser.JSONParserNodeKind.arrayStart', kind: "enummemberdeclaration", path: './stdx/data/json/parser/JSONParserNodeKind.html#arrayStart', attributes: []},
{name: 'stdx.data.json.parser.JSONParserNodeKind.key', kind: "enummemberdeclaration", path: './stdx/data/json/parser/JSONParserNodeKind.html#key', attributes: []},
{name: 'stdx.data.json.parser.JSONParserNodeKind.literal', kind: "enummemberdeclaration", path: './stdx/data/json/parser/JSONParserNodeKind.html#literal', attributes: []},
{name: 'stdx.data.json.parser.JSONParserNodeKind.none', kind: "enummemberdeclaration", path: './stdx/data/json/parser/JSONParserNodeKind.html#none', attributes: []},
{name: 'stdx.data.json.parser.JSONParserNodeKind.objectEnd', kind: "enummemberdeclaration", path: './stdx/data/json/parser/JSONParserNodeKind.html#objectEnd', attributes: []},
{name: 'stdx.data.json.parser.JSONParserNodeKind.objectStart', kind: "enummemberdeclaration", path: './stdx/data/json/parser/JSONParserNodeKind.html#objectStart', attributes: []},
{name: 'stdx.data.json.parser.JSONParserRange', kind: "structdeclaration", path: './stdx/data/json/parser/JSONParserRange.html', attributes: []},
{name: 'stdx.data.json.parser.JSONParserRange.empty', kind: "functiondeclaration", path: './stdx/data/json/parser/JSONParserRange.empty.html', attributes: ["property"]},
{name: 'stdx.data.json.parser.JSONParserRange.front', kind: "functiondeclaration", path: './stdx/data/json/parser/JSONParserRange.front.html', attributes: ["property", "ref"]},
{name: 'stdx.data.json.parser.JSONParserRange.popFront', kind: "functiondeclaration", path: './stdx/data/json/parser/JSONParserRange.popFront.html', attributes: []},
{name: 'stdx.data.json.parser.JSONParserRange.this', kind: "functiondeclaration", path: './stdx/data/json/parser/JSONParserRange.this.html', attributes: []},
{name: 'stdx.data.json.parser.parseJSONStream', kind: "functiondeclaration", path: './stdx/data/json/parser/parseJSONStream.html', attributes: []},
{name: 'stdx.data.json.parser.parseJSONValue', kind: "functiondeclaration", path: './stdx/data/json/parser/parseJSONValue.html', attributes: []},
{name: 'stdx.data.json.parser.readArray', kind: "functiondeclaration", path: './stdx/data/json/parser/readArray.html', attributes: []},
{name: 'stdx.data.json.parser.readBool', kind: "functiondeclaration", path: './stdx/data/json/parser/readBool.html', attributes: []},
{name: 'stdx.data.json.parser.readDouble', kind: "functiondeclaration", path: './stdx/data/json/parser/readDouble.html', attributes: []},
{name: 'stdx.data.json.parser.readObject', kind: "functiondeclaration", path: './stdx/data/json/parser/readObject.html', attributes: []},
{name: 'stdx.data.json.parser.readString', kind: "functiondeclaration", path: './stdx/data/json/parser/readString.html', attributes: []},
{name: 'stdx.data.json.parser.skipToKey', kind: "functiondeclaration", path: './stdx/data/json/parser/skipToKey.html', attributes: []},
{name: 'stdx.data.json.parser.skipValue', kind: "functiondeclaration", path: './stdx/data/json/parser/skipValue.html', attributes: []},
{name: 'stdx.data.json.parser.toJSONValue', kind: "functiondeclaration", path: './stdx/data/json/parser/toJSONValue.html', attributes: []},
{name: 'stdx.data.json.value', kind: "module", path: './stdx/data/json/value.html', attributes: []},
{name: 'stdx.data.json.value.JSONValue', kind: "structdeclaration", path: './stdx/data/json/value/JSONValue.html', attributes: []},
{name: 'stdx.data.json.value.JSONValue.get', kind: "functiondeclaration", path: './stdx/data/json/value/JSONValue.get.html', attributes: ["inout", "ref"]},
{name: 'stdx.data.json.value.JSONValue.hasType', kind: "functiondeclaration", path: './stdx/data/json/value/JSONValue.hasType.html', attributes: ["const"]},
{name: 'stdx.data.json.value.JSONValue.isNull', kind: "functiondeclaration", path: './stdx/data/json/value/JSONValue.isNull.html', attributes: ["safe", "const"]},
{name: 'stdx.data.json.value.JSONValue.location', kind: "variabledeclaration", path: './stdx/data/json/value/JSONValue.location.html', attributes: []},
{name: 'stdx.data.json.value.JSONValue.opAssign', kind: "functiondeclaration", path: './stdx/data/json/value/JSONValue.opAssign.html', attributes: []},
{name: 'stdx.data.json.value.JSONValue.opIndex', kind: "functiondeclaration", path: './stdx/data/json/value/JSONValue.opIndex.html', attributes: ["ref"]},
{name: 'stdx.data.json.value.JSONValue.Payload', kind: "aliasdeclaration", path: './stdx/data/json/value/JSONValue.Payload.html', attributes: []},
{name: 'stdx.data.json.value.JSONValue.payload', kind: "variabledeclaration", path: './stdx/data/json/value/JSONValue.payload.html', attributes: []},
{name: 'stdx.data.json.value.JSONValue.PayloadUnion', kind: "uniondeclaration", path: './stdx/data/json/value/JSONValue.PayloadUnion.html', attributes: []},
{name: 'stdx.data.json.value.JSONValue.PayloadUnion.array', kind: "variabledeclaration", path: './stdx/data/json/value/JSONValue.PayloadUnion.array.html', attributes: []},
{name: 'stdx.data.json.value.JSONValue.PayloadUnion.bigInt', kind: "variabledeclaration", path: './stdx/data/json/value/JSONValue.PayloadUnion.bigInt.html', attributes: []},
{name: 'stdx.data.json.value.JSONValue.PayloadUnion.boolean', kind: "variabledeclaration", path: './stdx/data/json/value/JSONValue.PayloadUnion.boolean.html', attributes: []},
{name: 'stdx.data.json.value.JSONValue.PayloadUnion.double_', kind: "variabledeclaration", path: './stdx/data/json/value/JSONValue.PayloadUnion.double_.html', attributes: []},
{name: 'stdx.data.json.value.JSONValue.PayloadUnion.integer', kind: "variabledeclaration", path: './stdx/data/json/value/JSONValue.PayloadUnion.integer.html', attributes: []},
{name: 'stdx.data.json.value.JSONValue.PayloadUnion.null_', kind: "variabledeclaration", path: './stdx/data/json/value/JSONValue.PayloadUnion.null_.html', attributes: []},
{name: 'stdx.data.json.value.JSONValue.PayloadUnion.object', kind: "variabledeclaration", path: './stdx/data/json/value/JSONValue.PayloadUnion.object.html', attributes: []},
{name: 'stdx.data.json.value.JSONValue.PayloadUnion.string', kind: "variabledeclaration", path: './stdx/data/json/value/JSONValue.PayloadUnion.string.html', attributes: []},
{name: 'stdx.data.json.value.JSONValue.this', kind: "functiondeclaration", path: './stdx/data/json/value/JSONValue.this.html', attributes: []},
{name: 'stdx.data.json.value.opt', kind: "functiondeclaration", path: './stdx/data/json/value/opt.html', attributes: ["auto"]},
{name: 'stdx.data.json.value.WrappedBigInt', kind: "structdeclaration", path: './stdx/data/json/value/WrappedBigInt.html', attributes: []},
{name: 'stdx.data.json.value.WrappedBigInt.this', kind: "functiondeclaration", path: './stdx/data/json/value/WrappedBigInt.this.html', attributes: ["ref", "safe"]},
{name: 'stdx.data.json.value.WrappedBigInt.value', kind: "functiondeclaration", path: './stdx/data/json/value/WrappedBigInt.value.html', attributes: ["ref", "property", "safe", "inout"]},
{name: 'stdx.data.json', kind: "module", path: './stdx/data/json.html', attributes: []},
];
